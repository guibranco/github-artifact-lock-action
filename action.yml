name: acquire-artifact-lock
author: guibranco
description: Acquire lock using artifact existence as a locking mechanism

branding:
  icon: lock
  color: green

inputs:
  lock-name:
    description: Name of the lock (used as artifact name)
    required: true
    default: test-lock
  retry-wait:
    description: Seconds to wait before retrying
    required: false
    default: "10"
  retry-max:
    description: Maximum number of retries
    required: false
    default: "30"

runs:
  using: "composite"
  steps:
    - name: Try to acquire lock üîê
      shell: bash
      run: |
        echo "üîê Acquiring lock: '${{ inputs.lock-name }}'"

        TOKEN="${{ github.token }}"
        REPO="${{ github.repository }}"
        LOCK_NAME="${{ inputs.lock-name }}"
        API_URL="https://api.github.com/repos/$REPO/actions/artifacts"

        attempt=0
        while [[ $attempt -lt ${{ inputs.retry-max }} ]]; do
          echo "üîç Checking for existing lock (attempt $((attempt+1))/${{ inputs.retry-max }})..."
          response=$(curl -s \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "$API_URL?name=$LOCK_NAME")

          total_count=$(echo "$response" | jq -r '.total_count')
          echo "Found $total_count total artifacts"
          
          matching_artifacts=$(echo "$response" | jq -r --arg name "$LOCK_NAME" '.artifacts | map(select(.name == $name)) | length')
          echo "Found $matching_artifacts artifacts with name '$LOCK_NAME'"
          
          if [[ "$matching_artifacts" -eq "0" ]]; then
            echo "‚úÖ Lock is free. Proceeding to create artifact lock..."
            mkdir -p _artifact-lock
            echo "locked" > _artifact-lock/lock
            exit 0
          fi
          
          if [[ "$matching_artifacts" -gt "0" ]]; then
            matching_id=$(echo "$response" | jq -r --arg name "$LOCK_NAME" '.artifacts | map(select(.name == $name))[0].id')
            echo "‚ö†Ô∏è Lock is held. Found artifact with ID: $matching_id"
          fi

          echo "‚è≥ Lock is still held. Waiting ${{ inputs.retry-wait }}s before retrying..."
          attempt=$((attempt + 1))
          sleep "${{ inputs.retry-wait }}"
        done

        echo "‚ùå Failed to acquire lock after ${{ inputs.retry-max }} attempts."
        exit 1

    - name: Upload lock artifact üîè
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.lock-name }}
        path: _artifact-lock/lock
        retention-days: 1

    - name: Confirm lock acquired ‚úÖ
      if: success()
      shell: bash
      run: echo "‚úÖ Lock acquired."
